######################################################
################# Setup Logstash #####################
######################################################
---

- name: "Create Logstash directory"
  file:
    path: "{{ logstash_dir }}/pipeline"
    mode: u+rw,g+rw
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    state: directory

- name: Install Logstash templates
  template:
    src: "templates/{{ item }}.j2"
    dest: "{{ logstash_dir }}/{{ item }}"
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    mode: 0644
  with_items:
    - deploy.yml
    - logstash.yml

- name: Install pipeline templates
  template:
    src: "{{ item }}"
    dest: "{{ logstash_dir }}/pipeline/{{ item | basename | regex_replace('\\.j2','') }}"
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    mode: 0644
  with_fileglob:
    - "templates/pipeline/*.j2"

- name: Copy Additional Files
  copy:
    src: "files/"
    dest: "{{ logstash_dir }}"
    owner: "{{ logstash_user }}"
    group: "{{ logstash_group }}"
    mode: 0644

- name: Copy Additional Logstash Plugins to Servers
  local_action: command /bin/sh -c "/usr/bin/ssh root@{{ item }} 'mkdir -p {{ logstash_dir }}' && /usr/bin/scp -rp {{ install_dir }}/playbooks/roles/logstash/files/plugins root@{{ item }}:{{ logstash_dir }}/"
  with_items: "{{ groups['logstash'] }}"

- name: Flush Deployment
  shell: |
    kubectl delete -f {{ logstash_dir }}/deploy.yml --ignore-not-found=true
    while [ $(kubectl get -f {{ logstash_dir }}/deploy.yml | tail -n +2 | wc -l) != '0' ]; do
      echo -n .;
      sleep 1;
    done;
    sleep 5;

- name: Create Main ConfigMap
  shell: |
    kubectl create configmap logstash \
    --from-file {{ logstash_dir }}/logstash-template.json \
    --from-file {{ logstash_dir }}/logstash.yml \
    --from-file {{ logstash_dir }}/log4j2.properties \
    --dry-run -o yaml | kubectl replace --force -f -

- name: Create Pipeline ConfigMap
  shell: |
    kubectl create configmap logstash-pipeline --from-file {{ logstash_dir }}/pipeline --dry-run -o yaml | kubectl replace --force -f -

- name: Deploy Services
  import_role:
    name: kubernetes/common
    tasks_from: kube_create
  vars:
    name: "Logstash"
    file_name: "{{ logstash_dir }}/deploy.yml"

- name: Wait for logstash to be ready
  import_role:
    name: kubernetes/common
    tasks_from: kube_wait
  vars:
    type: "deployments"
    namespace: "default"
    resource_name: "logstash"
    label: ""

...
