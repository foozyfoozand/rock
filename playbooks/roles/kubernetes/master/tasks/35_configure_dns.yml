---

- name: Override DNS if not provided
  set_fact:
    dns_ip: "{{ hostvars[groups['master-server'][0]].management_ipv4 }}"
  when: dns_ip is not defined or dns_ip is none

- name: Kube | Get kube-dns IP
  shell: "kubectl get svc -n kube-system | grep kube-dns | awk '{print $3}'"
  register: kube_dns_ip

- name: Verify kube_dns is valid
  fail:
    msg: "We were not able to get kubedns with kubectl get svc -n kube-system | grep kube-dns | awk '{print $3}'. Kubedns value is {{ kube_dns_ip }}. This means we couldn't update resolv.conf with kubedns which would cause a failure so we are exiting. This means that for whatever reason Kubernetes' DNS service wasn't running."
  when: (kube_dns_ip.stdout | ipv4) != kube_dns_ip.stdout

- name: Kube | Insert kube-dns into dnsmasq
  lineinfile:
    path: /etc/dnsmasq.conf
    regexp: '^server='
    line: 'server=/cluster.local/{{ kube_dns_ip.stdout }}'
  when: inventory_hostname in groups['master-server']

- name: Bump the dnsmasq service
  systemd:
    name: dnsmasq
    daemon-reload: yes
    state: restarted


# DNS template must be copied after dns_ip variable is populated
- name: 'Install dns template'
  template:
    src: "{{ item }}.yml.j2"
    dest: "{{ kube_dir }}/{{ item }}.yml"
    owner: root
    group: root
    mode: 0644
  with_items:
    - kube_dns_config_map

- name: Deploy Kube DNS Config Map
  include_role:
    name: kubernetes/common
    tasks_from: kube_create
  vars:
    name: "Kubernetes DNS Configuration"
    file_name: "{{ kube_dir }}/kube_dns_config_map.yml"

...
