---

#######################################
# Perform layer 3 functionality test  #
# and IP address verify               #
#######################################
#The below code verifies that the management IPV4 addresses are valid IPs
#Meaning that they have 4 octets and only contain numbers in those octets
- name: Verify IP scheme (111.111.111.111)
  fail:
    msg: "{{ item }} is not a valid IP"
  when: (item | regex_search('\\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b')) != item
  with_items: "{{ management_ipv4 }}"
  changed_when: False

#The below code verifies that the management IPV4 addresses are valid IP ranges
#This means that each octet ranges 0-255 nothing more, nothing less
- name: Verify valid IP range (0-255)
  fail:
    msg: "{{ item }} is not a valid IP range"
  when: item.split('.')[0] | int > 255 or item.split('.')[1] | int > 255 or item.split('.')[2] | int > 255 or item.split('.')[3] | int > 255
  with_items: "{{ management_ipv4 }}"
  changed_when: false

- name: ping all ips in inventory
  shell: "ping -c 1 {{ item }}"
  with_items: "{{ groups['nodes'] }}"
  changed_when: False

#The below installs pip (needed for the next function)
- name: yum install pip
  yum:
    name: python2-pip
    state: installed

#The below is needed for updating a python module for the cidr verify
- name: install ipaddress
  pip: name=ipaddress

#The below code pings every ip in the services cidr ip range to verify that nothing is there.
#It is a little gross looking as it goes from in line python to bash. But this was the fastest way to ping a /24 or larger (around 3 seconds for a /24)
- name: Verify that the services cidr is available (no ip's in use)
  shell: "ip=$(python -c $\'import ipaddress\nnet = ipaddress.ip_network(u\\\'{{ item }}\\\', False)\\nfor r in net:\\n print r') && output=$( for ip in $ip; do ping -c 1 $ip | grep \"bytes from\" & done;) && echo $output"
  ignore_errors: True
  register: result_output
  with_items: "{{ kubernetes_services_cidr }}"
  changed_when: False
  failed_when: result_output.stdout != ""

...
